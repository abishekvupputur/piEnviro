name: Docker Image CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Extract the image name/tag from docker-compose.yml
      # Example line in compose: "image: pienviro:0.2"
      - name: Read image from compose
        id: meta
        run: |
          set -euo pipefail
          IMAGE=$(grep -E '^[[:space:]]*image:[[:space:]]*' docker-compose.yml | head -n1 | awk '{print $2}')
          if [ -z "${IMAGE:-}" ]; then
            echo "No 'image:' found in docker-compose.yml" >&2
            exit 1
          fi
          # Normalized name for safe filenames/artifact names
          SAFE_IMAGE=${IMAGE//[:\/]/-}
          echo "IMAGE=$IMAGE" >> "$GITHUB_ENV"
          echo "SAFE_IMAGE=$SAFE_IMAGE" >> "$GITHUB_ENV"
          echo "image=$IMAGE" >> "$GITHUB_OUTPUT"
          echo "safe_image=$SAFE_IMAGE" >> "$GITHUB_OUTPUT"
          echo "Resolved image: $IMAGE -> safe: $SAFE_IMAGE"

      - name: Build image (docker compose)
        run: |
          docker compose build --build-arg BUILDKIT_INLINE_CACHE=1

      - name: Export image as artifact
        run: |
          set -euo pipefail
          mkdir -p out
          IMAGE="${IMAGE:?missing}"
          SAFE_IMAGE="${SAFE_IMAGE:?missing}"
          TAR="out/${SAFE_IMAGE}.tar"
          echo "Saving ${IMAGE} -> ${TAR}.gz"
          docker save -o "${TAR}" "${IMAGE}"
          gzip -9 "${TAR}"
          ls -lh out

      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image-${{ env.SAFE_IMAGE }}
          path: out/*.tar.gz
          if-no-files-found: error
          compression-level: 0   # already gzipped

      - name: Compose config (debug)
        run: docker compose config > compose.effective.yml

      - name: Upload compose config
        uses: actions/upload-artifact@v4
        with:
          name: compose-effective-${{ github.run_id }}
          path: compose.effective.yml
